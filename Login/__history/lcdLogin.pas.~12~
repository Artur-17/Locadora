unit lcdLogin;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, cxGraphics, cxLookAndFeels, cxLookAndFeelPainters, Menus,
  dxSkinsCore, dxSkinBlack, dxSkinBlue, dxSkinBlueprint, dxSkinCaramel,
  dxSkinCoffee, dxSkinDarkRoom, dxSkinDarkSide, dxSkinDevExpressDarkStyle,
  dxSkinDevExpressStyle, dxSkinFoggy, dxSkinGlassOceans, dxSkinHighContrast,
  dxSkiniMaginary, dxSkinLilian, dxSkinLiquidSky, dxSkinLondonLiquidSky,
  dxSkinMcSkin, dxSkinMetropolis, dxSkinMetropolisDark, dxSkinMoneyTwins,
  dxSkinOffice2007Black, dxSkinOffice2007Blue, dxSkinOffice2007Green,
  dxSkinOffice2007Pink, dxSkinOffice2007Silver, dxSkinOffice2010Black,
  dxSkinOffice2010Blue, dxSkinOffice2010Silver, dxSkinOffice2013DarkGray,
  dxSkinOffice2013LightGray, dxSkinOffice2013White, dxSkinOffice2016Colorful,
  dxSkinOffice2016Dark, dxSkinPumpkin, dxSkinSeven, dxSkinSevenClassic,
  dxSkinSharp, dxSkinSharpPlus, dxSkinSilver, dxSkinSpringTime, dxSkinStardust,
  dxSkinSummer2008, dxSkinTheAsphaltWorld, dxSkinsDefaultPainters,
  dxSkinValentine, dxSkinVisualStudio2013Blue, dxSkinVisualStudio2013Dark,
  dxSkinVisualStudio2013Light, dxSkinVS2010, dxSkinWhiteprint,
  dxSkinXmas2008Blue, ExtCtrls, StdCtrls, cxButtons, dxGDIPlusClasses, DB,
  MemDS, DBAccess, Uni, lcdDataModule, FuncaoCriptografia, lcdCadastroFuncionario, lcdCaminhoBancoDados;

type
  TLogin = class(TForm)
    lblLogin: TLabel;
    btnOk: TcxButton;
    edtLogin: TEdit;
    imgLogin: TImage;
    edtSenha: TEdit;
    lblSenha: TLabel;
    btnFechar: TcxButton;
    btnBancoDados: TcxButton;
    procedure btnFecharClick(Sender: TObject);
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
    procedure FormShow(Sender: TObject);
    procedure btnOkClick(Sender: TObject);
  private
    { Private declarations }
    fFechar : boolean;
    procedure validarLogin();
  public
    { Public declarations }
    class procedure exibirLogin();
  end;

var
  Login: TLogin;

implementation

{$R *.dfm}

{ TLogin }

procedure TLogin.btnFecharClick(Sender: TObject);
begin
  fFechar:= true;
  Application.Terminate;
end;

procedure TLogin.btnOkClick(Sender: TObject);
var
  oUsuario : TCadastroFuncionario;     
begin
//  validarLogin();

  try
     oUsuario := TCadastroFuncionario.Create(dtmPrincipal.conexao);
    if oUsuario.logarUsuario(edtLogin.Text, edtSenha.Text)  then
    begin
      fFechar := true;
      Close;
    end
    else
    begin
      MessageDlg('Usuário inválido', mtInformation, [mbOK], 0);
    end;
 
  finally
    if Assigned(oUsuario) then
      FreeAndNil(oUsuario);

  end;
  

  
end;

class procedure TLogin.exibirLogin;
var
  lcadastro : TLogin;
begin
  lcadastro := TLogin.Create(nil);
  lcadastro.ShowModal();
  FreeAndNil(lcadastro);
end;

procedure TLogin.FormCloseQuery(Sender: TObject; var CanClose: Boolean);
begin
  CanClose := fFechar;
end;

procedure TLogin.FormShow(Sender: TObject);
begin
  if (dtmPrincipal.conexao.Database = '') then
    ShowMessage('Selecione o caminho da Base de Dados');
    lcdCaminhoBancoDados.


  fFechar := false;
end;

procedure TLogin.validarLogin;
begin
  if ( edtLogin.Text = '' ) then  //Verifica se o campo "Login" foi preenchido
    begin
      ShowMessage('O campo login deve ser preenchido para prosseguir');
      if edtLogin.CanFocus then
      edtLogin.SetFocus;
      Exit;

    end;


  if (edtSenha.Text = '') then //Verifica se o campo "Senha" foi preenchido
		begin
		ShowMessage('O campo Senha deve ser preenchido para prosseguir');
		if edtSenha.CanFocus then
    edtSenha.SetFocus;
		Exit;
    end;

end;

end.
